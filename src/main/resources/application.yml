spring:
  datasource:
    url: jdbc:postgresql://HoopInsightsDB:5432/postgres
    username: postgres
    password: password
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  rabbitmq:
    host: rabbitmq
    port: 5672

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: profile, email
            redirect-uri: "http://localhost:8080/api/v1/auth/oauth2/code/google"
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

jwt:
  secret: your_secret_key
  expiration: 3600000 # 1 hour in milliseconds

logging:
  level:
    root: INFO
    com.example.backend: DEBUG
  file:
    name: app.log
    path: ./logs
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

api:
  rapidapi:
    host: api-nba-v1.p.rapidapi.com
    key: f4d8255382msh2c161a373f530e6p157b0ajsn9a01cce6f434

flask:
  base-url: http://flask-service:5000
